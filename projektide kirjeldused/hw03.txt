Projekti 3. osa

1. Looge Servlet aadressiga "/api/orders", mis võtab vastu postitatud tellimusi.

   Postitades Json kujul tellimuse peaks rakendus genereerima tellimusele 
   uue id ja tagastama sisestatud tellimuse Json kujul.
   
   Saadetud tellimusi selles osas veel ei salvestata aga rakendus peab 
   igale tellimusele erineva id genereerima.
   
   Juhuslike arvuge kasutamine id-na ei ole hea tava, seega on soovitatav 
   kasutada loendust. Id genereerimiseks võite lihtsalt luua Long tüüpi muutuja, 
   mida iga sisestamise korral suurendate.
   
   Json sisendi töötlemiseks ei tohi sellel korral valmis teeke kasutada.
   Seega peaksite andmete lugemisel sisendit töötlemiseks kasutama näitekeks 
   meetodeid replace(), trim() ja split() või kasutama regulaaravaldisi.
   
   Objektist Json stringi koostamisel peaksite tulemuse osadest kokku panema.
   
     Päringu näide:
   
     POST /api/orders HTTP/1.1
     Host: localhost:8080
     Content-Type: application/json
     
     { "orderNumber": "A123" }
   
     Vastuse näide:
     
     HTTP/1.1 200 OK
     Content-Type: application/json
     
     { "id": "1", "orderNumber": "A123" }

2. See ülesanne ei ole tingimata kohustuslik. Kui see jääb tegemata saate 
   maksimaalse 5 punkti asemel 3.

   Looge servlet aadressiga "/api/parser", mis võimaldab teie loodud 
   Json-i parserit põhjalikumalt testida.
   
   String-i kujul olevast sisendist väärtuste kätte saamise ja väljundi 
   Json-iks teisendamise osa on eelmise punktiga ühine ja see loogika ei 
   tohi olla kahekordselt. Vastasel juhul ei aita antud teenus kuidagi 
   eelmise ülesande jaoks vajalikku parser-ist testida.
   
   Parser peaks saama info kätte mistahes hulgast võti-väärtus paaridest.
   
   Lihtsustusena saate arvestada, et võtmete väärtused saavad olla ainult 
   stringid või täisarvud tüüpi.

   Ülesande testimiseks kasutatakse juhuslikult genereeritud võtemete 
   ja väärtustega sisendit.
   
   Nt. {"atns":"mucbr","wce":"lid","daha":"dobl", ...

   Tõestamaks, et olete sisendist kõik info kätte saanud, peaksite väljundina 
   tagastama Json-i, milles on tehtud järgmised teisendused.
   
   a) kui võti on kuni 1-3 märki pikk,
      siis jääb väärtus samaks, mis sisendis.
      
   b) kui võti on rohkem kui 3 märki pikk ja väärtus on string tüüpi,
      siis on väärtuseks võti ise.

   c) kui võti on rohkem kui 3 märki pikk ja väärtus on täisarv tüüpi,
      siis on väärtusedks 2 * sisendväärtus.
      
   Päringu näide:
   
     POST /api/parser HTTP/1.1
     Host: localhost:8080
     Content-Type: application/json
     
     {"atns":"mucbr","wce":"lid","daha":"dobl","um":3,"bile":"ov","ucm":"itos","cpjn":1}
   
   Vastuse näide:
     
     HTTP/1.1 200 OK
     Content-Type: application/json
     
     {"atns":"atns","wce":"lid","daha":"daha","um": 3,"bile":"bile","ucm":"itos","cpjn":2}


Lõplik commit märgistage tag-iga hw03.

Töötav näidis, mis läbib testid:
  http://ci.itcollege.ee/icd0011/examples/hw03/
  
  NB! GET päring sellele aadressile ei peagi midagi kasulikku näitama.
      Antud rakendus vastab ainult POST päringutele (/api/orders ja /api/parser), 
      nagu ülesandes nõutud.

Projekti lähtekood peab vastama järgmistele stiilireeglitele:
  https://bitbucket.org/mkalmo/hwtests/src/master/pmd/ruleset.xml
  
Projekt peab läbima järgmised testid:
  https://bitbucket.org/mkalmo/hwtests/src/master/src/test/java/tests/Hw03.java

Stiilireeglite ja testide kasutamise näide on harjutustunni Servleti ülesande juures.
