Jdbc

Kloonige https://bitbucket.org/mkalmo/exjdbc repo ja importige see IDE-sse.

1. Uurige kuidas käitub "try with resources" konstruktsioon (toorkikus TryWithResources.java)

2. Ühenduge andmebaasiga läbi Idea.

   Database sakk -> + -> DataSoucre -> PostgreSql

   Host: db.mkalmo.xyz
   User: teie Bitbucket-i kasutajanimi võimalike muudatustega*
   Password: projekti esimeses osas valitud salasõna räsi neli esimest märki 
             (https://bitbucket.org/<teie kasutajanimi>/icd0011/src/master/info.json)
   Database: sama, mis kasutajanimi

   * Kasutajanime võimalikud muudatused.
   
     1) kui teie kasutajanimi sisaldab suuri tähti, siis need peaks muutma 
        väiketähtedeks.
        
     2) kui teie kasutajanimi sisaldab sümboleid peale tähtede ja numbrite, 
        siis peaksite muutma need alakriipsudeks (_).
        
     3) kui teie kasutajanimi ei alga tähega siis peate lisama kasutajanime 
        ette x-täht.
   
     Näited:
     
       abc -> abc (jääb samaks)
       Abc -> abc (suured tähed väikesteks)
       a-b -> a_b (muud sümbolid alakriipsudeks)
       1ab -> x1ab (lisatakse x-täht)

3. Looge Idea abil andmebaasi jada ja isikute tabel

   CREATE SEQUENCE seq1 START WITH 1;

   CREATE TABLE person (
      id BIGINT NOT NULL PRIMARY KEY DEFAULT nextval('seq1'),
      name VARCHAR(255) NOT NULL,
      age INT
   );

4. Sisestage läbi Java koodi "person" tabelisse kaks kirjet.

   Ühenduse andmed saate määrata failis src/main/resources/application.properties.
   
   Baasiga ühenduse näide on fails Main.java.

5. Küsige baasist tabeli "person" sisu ja näidake välja (System.out).

6. Tehke meetod, mis võtab "person" tabelist andmed, teeb nende põhjal 
   Person objektid ja tagastab listi Person objektidega.

7. Tõstke isikute tagastamise meetod PersonDao klassi. Kontrollige, et 
   meetod ka uues kohas töötab.

8. Sisestage mitu sql lauset failist.
   
   Sisestatavad laused on failis src/main/resources/schema.sql ja 
   src/main/resources/data.sql.
   
   Failde lugemiseks on projektis klass FileUtil.
   
     FileUtil.readFileFromClasspath("schema.sql");
   
   Käivitage laused executeUpdate() meetodiga (see käivitab ka mitu lauset korraga).

9. Tehke dao-sse meetod, millelt saab id järgi isiku küsida.

10. Tehke dao-sse meetod, isiku sisestamiseks. Meetod peaks tagastama 
   sisestatava isiku objekti, millel on id väli täidetud.

11. Jälgige, kuidas käitub klass ühenduste pool (BasicDataSource).
   
   BasicDataSource-i kasutamise näide on failis ConnectionPoolExample.java. 
   Seal on kasutuses abiklass ConnectionPoolFactory, milles on puuli 
   loomine ja initsialiseerimine.
   
   Jälgige, kuidas kuidas muutub aktiivsete ja passiivsete (idle) ühenduste arv.
   
   Proovige, mitu ühendust saate puulist küsida ja mis juhtub, kui ühendused 
   otsa saavad.
   
12. Pange PersonDao kasutama ühenduste puuli.

Seletused ja lahendused: https://youtu.be/FroJQMnBLd4
